#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{algorithm,algpseudocode}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine biblatex
\cite_engine_type numerical
\biblio_style plain
\biblatex_bibstyle numeric
\biblatex_citestyle numeric
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Motion Planning for Autonomous Driving
\end_layout

\begin_layout Author
Philippe Weingertner, Minnie Ho
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Section
Related Work
\end_layout

\begin_layout Standard
There is a rich litterature related to Motion Planning and a very detailed
 survey of traditional methods is provided in 
\begin_inset CommandInset citation
LatexCommand cite
key "7490340"
literal "false"

\end_inset

.
 Among the first 4 successful participants of DARPA Urban Challenge in 2007,
 the approaches vary.
 The winner, CMU Boss vehicle used variational techniques for local trajectory
 generation in a structured environment.
 This was done in a 2 steps path-velocity decomposition.
 A first step of path planning, using variational techniques, is performed
 and for every candidate path, a combination of different velocity profiles
 (constant, linear, linear ramp, trapezoidal) is applied : the combination
 of a path and velocity profile defines a trajectory.
 In unstructured environments (parking lots) or in error recovery situations
 a lattice graph in 4-dimensional configuration space (position, orientation
 and velocity) is searched with Anytime D* algorithm to find a collision-free
 path.
 More details are provided in 
\begin_inset CommandInset citation
LatexCommand cite
key "Ferguson2009MotionPI,article,5980223"
literal "false"

\end_inset

.
 The vehicle from Stanford used a search strategy coined Hybrid A* that
 constructs a tree of motion primitives by recursively applying a finite
 set of maneuvers.
 The search was guided by a carefully designed heuristic.
 The vehicle arriving 3rd, Victor Tango from Virginia Tech, constructs a
 graph discretization of possible maneuvers and searches the graph with
 the A* algorithm.
 The vehicle arriving 4th, developed by MIT used a variant of RRT algorithm
 with biased sampling.
 While all these techniques differ, they fundamentally rely on a graph search
 where nodes correspond to a configuration state and edges correspond to
 elementary motion primitives.
 Although they provide solutions, the runtime and state space can grow exponenti
ally large.
 In this context, the use of heuristic to guide the search is important.
\end_layout

\begin_layout Standard
More recently, Reinforcement Learning and Deep RL have been investigated
 in the context of Autonomous Driving for Decision Making either at the
 Behavioural Planning or Motion Planning level.
 In some research papers from Volvo 
\begin_inset CommandInset citation
LatexCommand cite
key "DBLP:journals/corr/abs-1803-10056"
literal "false"

\end_inset

 and BMW 
\begin_inset CommandInset citation
LatexCommand cite
key "inproceedings"
literal "false"

\end_inset

 , an RL agent is trained in simulation to take decision at a higher tactical
 level: the decisions relate to a maneuver selection, like lane change,
 rather than a low level acceleration command.
 DQN is used to train an agent.
 But the problem with Reinforcement Learning is that the utility is optimized
 in expectation.
 So even if the reward is designed to avoid collisions, this will be optimized
 in expectation: ultimately it is as if safety would be enforced with soft
 constraints rather than hard constraints.
 Which is of course not acceptable for a real vehicle.
 To solve this problem in 
\begin_inset CommandInset citation
LatexCommand cite
key "inproceedings"
literal "false"

\end_inset

 an additional safety check layer is added after the DQN agent to eventually
 override the DQN agent decision if it is considered unsafe.
 Checking a decision wrt to a specific criteria is simpler than designing
 a decision making system that jointly optimizes efficiency, comfort and
 safety objectives.
 Combining RL with additional safety checks is mandatory for AD.
 
\end_layout

\begin_layout Standard
——————————
\end_layout

\begin_layout Section
Approach
\end_layout

\begin_layout Section
Experimental Setup and Status
\end_layout

\begin_layout Standard
The source code is available here: 
\begin_inset CommandInset href
LatexCommand href
name "CS221 Project"
target "https://github.com/PhilippeW83440/CS221_Project"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
Baseline: the decision is fast, immediate, but we find a collision free
 velocity profile only in 
\begin_inset Formula $35\%$
\end_inset

 of the cases.
\end_layout

\begin_layout Itemize
Oracle: the search space is big.
 With a time step of 
\begin_inset Formula $250$
\end_inset

 ms, looking for a collision free velocity profile over the next 
\begin_inset Formula $100$
\end_inset

 meters we find in 
\begin_inset Formula $100\%$
\end_inset

 of the cases a collision free solution; but in 
\begin_inset Formula $47.2$
\end_inset

 seconds with UCS and in 
\begin_inset Formula $190.7$
\end_inset

 seconds with DP running on an iCore9.
 We explored the graph with a depth of 24.
 UCS has a complexity of 
\begin_inset Formula $\mathcal{O}(n\log n)$
\end_inset

 with 
\begin_inset Formula $n=\left|\text{states}\right|$
\end_inset

.
 It potentially explores fewer states than DP.
\end_layout

\begin_layout Itemize
Planning with MCTS tree search
\end_layout

\begin_layout Itemize
Q-learning
\end_layout

\begin_layout Itemize
Combining Planning and Learning (with an efficient learned heuristic)
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "project"

\end_inset


\end_layout

\end_body
\end_document
